{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/auth/'; // No need for http://localhost:8080\n// Register user\n\nconst register = async userData => {\n  const response = await axios.post(API_URL + 'register', userData);\n  return response.data;\n}; // Login user\n\n\nconst login = async userData => {\n  const response = await axios.post(API_URL + 'login', userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n\n  return response.data;\n}; // Logout user\n\n\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst authService = {\n  register,\n  logout,\n  login\n};\nexport default authService;","map":{"version":3,"sources":["C:/practise/Java-Bootcamp-project/preciousNotes/client/src/features/auth/authService.js"],"names":["axios","API_URL","register","userData","response","post","data","login","localStorage","setItem","JSON","stringify","logout","removeItem","authService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,QAAhB,C,CAA0B;AAE1B;;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACnC,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAWJ,OAAO,GAAG,UAArB,EAAiCE,QAAjC,CAAvB;AACA,SAAOC,QAAQ,CAACE,IAAhB;AACD,CAHD,C,CAKA;;;AACA,MAAMC,KAAK,GAAG,MAAOJ,QAAP,IAAoB;AAChC,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAWJ,OAAO,GAAG,OAArB,EAA8BE,QAA9B,CAAvB;;AACA,MAAIC,QAAQ,CAACE,IAAb,EAAmB;AACjBE,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeP,QAAQ,CAACE,IAAxB,CAA7B;AACD;;AACD,SAAOF,QAAQ,CAACE,IAAhB;AACD,CAND,C,CAQA;;;AACA,MAAMM,MAAM,GAAG,MAAM;AACnBJ,EAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAG;AAAEZ,EAAAA,QAAF;AAAYU,EAAAA,MAAZ;AAAoBL,EAAAA;AAApB,CAApB;AACA,eAAeO,WAAf","sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/auth/'; // No need for http://localhost:8080\n\n// Register user\nconst register = async (userData) => {\n  const response = await axios.post(API_URL + 'register', userData);\n  return response.data;\n};\n\n// Login user\nconst login = async (userData) => {\n  const response = await axios.post(API_URL + 'login', userData);\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n  return response.data;\n};\n\n// Logout user\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst authService = { register, logout, login };\nexport default authService;\n"]},"metadata":{},"sourceType":"module"}