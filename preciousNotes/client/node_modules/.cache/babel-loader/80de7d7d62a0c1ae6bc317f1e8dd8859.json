{"ast":null,"code":"var _jsxFileName = \"C:\\\\practise\\\\Java-Bootcamp-project\\\\preciousNotes\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport GoalForm from '../components/GoalForm';\nimport GoalItem from '../components/GoalItem';\nimport Spinner from '../components/Spinner';\nimport { getGoals, reset } from '../features/goals/goalSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  var _user$user;\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch(); // Get user and goals from Redux store\n\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    goals,\n    isLoading,\n    isError,\n    message\n  } = useSelector(state => state.goals);\n  useEffect(() => {\n    // Redirect if no user (i.e., not logged in)\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n\n    if (isError) {\n      console.error(\"Error:\", message);\n    }\n\n    dispatch(getGoals());\n    return () => {\n      dispatch(reset()); // Cleanup on unmount\n    };\n  }, [user, navigate, isError, message, dispatch]);\n\n  const handleRefresh = () => {\n    dispatch(getGoals()); // Refetch goals when a goal is deleted\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome \", user === null || user === void 0 ? void 0 : (_user$user = user.user) === null || _user$user === void 0 ? void 0 : _user$user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Notes App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoalForm, {\n      onGoalAdded: handleRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content\",\n      children: goals.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goals\",\n        children: goals.map(goal => /*#__PURE__*/_jsxDEV(GoalItem, {\n          goal: goal,\n          onGoalDeleted: handleRefresh\n        }, goal._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You have not taken any notes yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"fLbczBwOi3uO087bxDwyirGnDAc=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/practise/Java-Bootcamp-project/preciousNotes/client/src/pages/Dashboard.jsx"],"names":["useEffect","useState","useNavigate","useSelector","useDispatch","GoalForm","GoalItem","Spinner","getGoals","reset","Dashboard","navigate","dispatch","user","state","auth","goals","isLoading","isError","message","console","error","handleRefresh","name","length","map","goal","_id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,6BAAhC;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAAA;;AACnB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B,CAFmB,CAInB;;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAAyChB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACE,KAAlB,CAA1D;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACa,IAAL,EAAW;AACTF,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACA;AACD;;AAED,QAAIO,OAAJ,EAAa;AACXE,MAAAA,OAAO,CAACC,KAAR,CAAc,QAAd,EAAwBF,OAAxB;AACD;;AAEDP,IAAAA,QAAQ,CAACJ,QAAQ,EAAT,CAAR;AAEA,WAAO,MAAM;AACXI,MAAAA,QAAQ,CAACH,KAAK,EAAN,CAAR,CADW,CACO;AACnB,KAFD;AAGD,GAhBQ,EAgBN,CAACI,IAAD,EAAOF,QAAP,EAAiBO,OAAjB,EAA0BC,OAA1B,EAAmCP,QAAnC,CAhBM,CAAT;;AAkBA,QAAMU,aAAa,GAAG,MAAM;AAC1BV,IAAAA,QAAQ,CAACJ,QAAQ,EAAT,CAAR,CAD0B,CACL;AACtB,GAFD;;AAIA,MAAIS,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,8BACE;AAAA,+BAAaJ,IAAb,aAAaA,IAAb,qCAAaA,IAAI,CAAEA,IAAnB,+CAAa,WAAYU,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,QAAD;AAAU,MAAA,WAAW,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA,YAPF,eASE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,gBACGN,KAAK,CAACQ,MAAN,GAAe,CAAf,gBACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBACGR,KAAK,CAACS,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAyB,UAAA,IAAI,EAAEA,IAA/B;AAAqC,UAAA,aAAa,EAAEJ;AAApD,WAAeI,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAuBD;;GAzDQjB,S;UACUR,W,EACAE,W,EAGAD,W,EAC8BA,W;;;KANxCO,S;AA2DT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport GoalForm from '../components/GoalForm'\nimport GoalItem from '../components/GoalItem'\nimport Spinner from '../components/Spinner'\nimport { getGoals, reset } from '../features/goals/goalSlice'\n\nfunction Dashboard() {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  // Get user and goals from Redux store\n  const { user } = useSelector((state) => state.auth)\n  const { goals, isLoading, isError, message } = useSelector((state) => state.goals)\n\n  useEffect(() => {\n    // Redirect if no user (i.e., not logged in)\n    if (!user) {\n      navigate('/login')\n      return\n    }\n\n    if (isError) {\n      console.error(\"Error:\", message)\n    }\n\n    dispatch(getGoals())\n\n    return () => {\n      dispatch(reset()) // Cleanup on unmount\n    }\n  }, [user, navigate, isError, message, dispatch])\n\n  const handleRefresh = () => {\n    dispatch(getGoals()) // Refetch goals when a goal is deleted\n  }\n\n  if (isLoading) {\n    return <Spinner />\n  }\n\n  return (\n    <>\n      <section className='heading'>\n        <h1>Welcome {user?.user?.name}</h1>\n        <p>Notes App</p>\n      </section>\n\n      <GoalForm onGoalAdded={handleRefresh} />\n      <br />\n\n      <section className='content'>\n        {goals.length > 0 ? (\n          <div className='goals'>\n            {goals.map((goal) => (\n              <GoalItem key={goal._id} goal={goal} onGoalDeleted={handleRefresh} />\n            ))}\n          </div>\n        ) : (\n          <h3>You have not taken any notes yet</h3>\n        )}\n      </section>\n    </>\n  )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}