{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\"; // Register user\n\nexport const register = createAsyncThunk(\"auth/register\", async (userData, thunkAPI) => {\n  try {\n    return await authService.register(userData);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: \"\"\n  },\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, state => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = null; // ✅ Ensure user is null since no token is returned\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["C:/practise/Java-Bootcamp-project/preciousNotes/client/src/features/auth/authSlice.js"],"names":["createSlice","createAsyncThunk","authService","register","userData","thunkAPI","error","message","response","data","toString","rejectWithValue","authSlice","name","initialState","user","isError","isSuccess","isLoading","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","rejected","action","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CACtC,eADsC,EAEtC,OAAOG,QAAP,EAAiBC,QAAjB,KAA8B;AAC5B,MAAI;AACF,WAAO,MAAMH,WAAW,CAACC,QAAZ,CAAqBC,QAArB,CAAb;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACd,UAAMC,OAAO,GACVD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeC,IAAjC,IAAyCH,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBF,OAA9D,IACAD,KAAK,CAACC,OADN,IAEAD,KAAK,CAACI,QAAN,EAHF;AAIA,WAAOL,QAAQ,CAACM,eAAT,CAAyBJ,OAAzB,CAAP;AACD;AACF,CAZqC,CAAjC;AAeP,MAAMK,SAAS,GAAGZ,WAAW,CAAC;AAC5Ba,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,IADM;AAEZC,IAAAA,OAAO,EAAE,KAFG;AAGZC,IAAAA,SAAS,EAAE,KAHC;AAIZC,IAAAA,SAAS,EAAE,KAJC;AAKZX,IAAAA,OAAO,EAAE;AALG,GAFc;AAS5BY,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAW;AAChBA,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,SAAN,GAAkB,KAAlB;AACAI,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACAK,MAAAA,KAAK,CAACd,OAAN,GAAgB,EAAhB;AACD;AANO,GATkB;AAiB5Be,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,OADH,CACWrB,QAAQ,CAACsB,OADpB,EAC8BJ,KAAD,IAAW;AACpCA,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACD,KAHH,EAIGM,OAJH,CAIWrB,QAAQ,CAACuB,SAJpB,EAIgCL,KAAD,IAAW;AACtCA,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACJ,SAAN,GAAkB,IAAlB;AACAI,MAAAA,KAAK,CAACN,IAAN,GAAa,IAAb,CAHsC,CAGnB;AACpB,KARH,EASGS,OATH,CASWrB,QAAQ,CAACwB,QATpB,EAS8B,CAACN,KAAD,EAAQO,MAAR,KAAmB;AAC7CP,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAG,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACAK,MAAAA,KAAK,CAACd,OAAN,GAAgBqB,MAAM,CAACC,OAAvB;AACAR,MAAAA,KAAK,CAACN,IAAN,GAAa,IAAb;AACD,KAdH;AAeD;AAjC2B,CAAD,CAA7B;AAoCA,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAAYR,SAAS,CAACkB,OAA5B;AACP,eAAelB,SAAS,CAACmB,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\";\n\n// Register user\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async (userData, thunkAPI) => {\n    try {\n      return await authService.register(userData);\n    } catch (error) {\n      const message =\n        (error.response && error.response.data && error.response.data.message) ||\n        error.message ||\n        error.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: \"\",\n  },\n  reducers: {\n    reset: (state) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(register.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(register.fulfilled, (state) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.user = null; // ✅ Ensure user is null since no token is returned\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n        state.user = null;\n      });\n  },\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}